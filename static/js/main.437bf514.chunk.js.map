{"version":3,"sources":["api/todos.ts","components/TodoInfo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["todos","id","title","completed","description","TodoInfo","todo","className","cn","checked","TodoList","preparedTodos","deleteTodo","completeTodo","map","Button","variant","onClick","color","App","state","setState","updatedTodos","filter","localStorage","setItem","JSON","stringify","handleChange","target","name","value","submit","event","preventDefault","trim","length","newTodo","Date","now","savedTodosString","getItem","savedTodos","parse","this","onSubmit","TextField","type","onChange","required","label","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.437bf514.chunk.js","sourcesContent":["const todos = [\r\n  {\r\n    id: 1,\r\n    title: 'delectus aut',\r\n    completed: true,\r\n    description: 'delectus aut autem'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'quis ut nam',\r\n    completed: false,\r\n    description: 'quis ut nam facilis et officia qui',\r\n  },\r\n];\r\n\r\nexport default todos;","import React from 'react';\r\nimport { Todos } from '../types/Todos';\r\nimport './TodoInfo.css';\r\nimport cn from 'classnames';\r\n\r\ntype Props = {\r\n  todo: Todos,\r\n};\r\n\r\nexport const TodoInfo:React.FC<Props> = ({ todo }) => (\r\n  <div className={cn(\"todo\", {\r\n    checked: todo.completed\r\n  })}>\r\n    <h2>{todo.title}</h2>\r\n    <span>{todo.description}</span>\r\n  </div>\r\n);\r\n","import React, { FC } from 'react';\r\nimport { TodoInfo } from './TodoInfo';\r\nimport { Todos } from '../types/Todos';\r\nimport './TodoList.css';\r\nimport Button from '@mui/material/Button';\r\nimport todos from '../api/todos';\r\nimport { isPropertySignature } from 'typescript';\r\n\r\ntype Props = {\r\n  preparedTodos: Todos[],\r\n  deleteTodo: (id: number) => void,\r\n  completeTodo: (id: number) => void,\r\n};\r\n\r\nexport const TodoList:FC<Props> = ({ \r\n  preparedTodos,\r\n  deleteTodo,\r\n  completeTodo,\r\n}) => (\r\n  <>\r\n    {preparedTodos.map(todo => (\r\n      <div className=\"todoWrap\" key={todo.id}>\r\n        <TodoInfo todo={todo} />\r\n        <div className=\"buttons_nav\">\r\n          <Button\r\n            variant={todo.completed ? 'outlined' : 'contained'}\r\n            className=\"button\"\r\n            onClick={() => completeTodo(todo.id)}\r\n          >\r\n            {todo.completed ? 'uncomplete' : 'complete'}\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"button\"\r\n            color=\"error\"\r\n            onClick={() => deleteTodo(todo.id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    ))}\r\n</>\r\n)\r\n","import React, { ChangeEvent, Component } from 'react';\r\nimport './App.css';\r\nimport todos from './api/todos';\r\nimport { TodoList } from './components/TodoList';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { Todos } from './types/Todos';\r\n\r\ninterface State {\r\n  title: string,\r\n  description: string,\r\n  preparedTodos: Todos[],\r\n}\r\n\r\nclass App extends Component<any, State> {\r\n  state: State = {\r\n    title: '',\r\n    description: '',\r\n    preparedTodos: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedTodosString = localStorage.getItem('todos');\r\n\r\n    let savedTodos: Todos[] = [];\r\n\r\n    if(savedTodosString) {\r\n      savedTodos = JSON.parse(savedTodosString) as Todos[];\r\n    }\r\n\r\n    this.setState(savedTodos.length && !this.state.preparedTodos.length\r\n      ? { preparedTodos: savedTodos }\r\n      : { preparedTodos: todos }\r\n    );\r\n  \r\n  }\r\n\r\n  deleteTodo = (id: number) => {\r\n    this.setState(state  => { \r\n      const updatedTodos = state.preparedTodos.filter(todo => todo.id !== id);\r\n\r\n      localStorage.setItem('todos', JSON.stringify(updatedTodos));\r\n\r\n      return {\r\n        preparedTodos: updatedTodos\r\n      }\r\n    })\r\n  }\r\n\r\n  completeTodo = (id: number) => {\r\n    this.setState(state  => {\r\n      const updatedTodos = state.preparedTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {...todo, completed: !todo.completed}\r\n        }\r\n\r\n        return todo;\r\n      });\r\n\r\n      localStorage.setItem('todos', JSON.stringify(updatedTodos));\r\n\r\n      return {\r\n        preparedTodos: updatedTodos,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange = ({\r\n    target\r\n  }: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value } as any);\r\n  };\r\n\r\n  submit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (this.state.description.trim().length > 0 && this.state.title.trim().length > 0) {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        title: this.state.title,\r\n        completed: false,\r\n        description: this.state.description,\r\n      };\r\n  \r\n      this.setState((state) => {\r\n        localStorage.setItem('todos', JSON.stringify([...state.preparedTodos, newTodo]));\r\n\r\n        return ({\r\n          preparedTodos: [...state.preparedTodos, newTodo],\r\n          title: '',\r\n          description: '',\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"title\">Todo App</h1>\r\n        <form className=\"input_form\" onSubmit={this.submit}>\r\n          <TextField\r\n            type=\"text\"\r\n            value={this.state.title}\r\n            name=\"title\"\r\n            id=\"title\"\r\n            onChange={this.handleChange}\r\n            className=\"input\"\r\n            required\r\n            variant=\"outlined\"\r\n            label=\"Title\"\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            name=\"description\"\r\n            id=\"description\"\r\n            onChange={this.handleChange}\r\n            className=\"input\"\r\n            required\r\n            variant=\"outlined\"\r\n            label=\"Description\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            className=\"button_submit\"\r\n          >\r\n            Add todo\r\n          </Button>\r\n        </form>\r\n        <div className=\"todos_list\">\r\n          {this.state.preparedTodos.length\r\n            ? (\r\n              <>\r\n                <h2 className=\"todos_title\">Todos</h2>\r\n                <TodoList\r\n                  preparedTodos={this.state.preparedTodos}\r\n                  deleteTodo={this.deleteTodo}\r\n                  completeTodo={this.completeTodo}\r\n                />\r\n              </>\r\n            )\r\n            : <h2>No todos</h2>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}